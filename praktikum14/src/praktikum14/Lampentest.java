package praktikum14;

public class Lampentest {

	public static void main(String[] args) {
		
		//eineLampe();
		
		//zweiLampen();
		
		lampenWarten();
		
		//lampenUeberwachen();
		
		//lampenStoppen();
	}
	
	/**
	 * Aufgabe 2a)
	 * Methode eineLampe(), in der nebenläufige Aktion gestartet werden
	 */
	public static void eineLampe() {
		Thread LampeEins = new Thread(new Lampe("rot", 200, 10));
		LampeEins.start();
	}
	
	/**
	 * Aufgabe 2c)
	 * Methode zweiLampen(), in der beidem Lampen unterschiedliche Farben
	 * und Verweil-Dauern und starten Nebenläufige Aktion beider Lampen
	 */
	public static void zweiLampen() {
		Thread LampeEIns = new Thread(new Lampe("rot", 200, 7));
		Thread LampeZwei = new Thread(new Lampe("blau", 300,5));
		LampeEIns.start();
		LampeZwei.start();
		System.out.println("Nebenlaeufige Aktion gestartet");
	}
	
	/**
	 * Aufgabe 3a)
	 * Methode LampenWarten(), Zwei unterschiedliche Farben und Dauer und anzahl von Wechell
	 */
	public static void lampenWarten() {
		
		try {
			Thread LampeEins = new Thread(new Lampe("rot", 200, 10));
			Thread LampeZwei = new Thread(new Lampe("blau", 300, 10));
			LampeEins.start();
			LampeEins.join();
			LampeZwei.start();
		} catch(InterruptedException exception) {
			System.err.println("LampenWarten starten");
		}
	}
	
	/**
	 * Methode lampenUeberwachen, drei Lampen mit unterschiedlichen Farben und Verweil-Dauer
	 * nebenläufige Aktionen dieser drei Lampen werden in einem eigenen Thread gestartet
	 */
	public static void lampenUeberwachen() {
		
		Lampe eins = new Lampe("rot", 200, 10);
		Lampe zwei = new Lampe("blau", 300, 10);
		Lampe drei = new Lampe("gruen", 500, 10);
		
		Thread lampeEins = new Thread(eins);
		Thread lampeZwei = new Thread(zwei);		
		Thread lampeDrei = new Thread(drei);
		
		try {
			lampeEins.start();
			lampeZwei.start();
			lampeDrei.start();
			
			while (lampeEins.isAlive() || lampeZwei.isAlive() || lampeDrei.isAlive()) {
				System.out.println(eins.state() + ", " + zwei.state() + ", " + drei.state());
				Thread.sleep(300);
			}
		} catch(Exception exception) {
			System.err.println("Fehler: " + exception);
		}
		
		System.out.println("Nebenläufige Aktion startet");		
	}
	
	
/**
 * Aufgabe 5b)
 * Möglichkeit des Abbrechns soll getestet werden
 */
public static void lampenStoppen() {
		
		Lampe eins = new Lampe("rot", 200, 20);
		Lampe zwei = new Lampe("blau", 300, 18);
		Lampe drei = new Lampe("gruen", 500, 15);
		
		Thread lampeEins = new Thread(eins);
		Thread lampeZwei = new Thread(zwei);		
		Thread lampeDrei = new Thread(drei);
		
		try {
			lampeEins.start();
			lampeZwei.start();
			lampeDrei.start();
			
			int counter = 0;
			
			while (lampeEins.isAlive() || lampeZwei.isAlive() || lampeDrei.isAlive()) {
				System.out.println(eins.state() + ", " + zwei.state() + ", " + drei.state() + " ");
				Thread.sleep(300);
				
				counter++;
				if(counter == 5) {
					lampeEins.interrupt();
					lampeZwei.interrupt();
					lampeDrei.interrupt();
				}
			}
		} catch(Exception exception) {
			System.err.println("Fehler: " + exception);
		}
		
		System.out.println("Nebenläufige Aktion startet");
	}
}
